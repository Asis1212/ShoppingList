{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  totalItems: 0\n};\nexport const totalItemsSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: state => {\n      state.totalItems += 1;\n    },\n    reset: state => {\n      state.totalItems = 0;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nexport const {\n  increment,\n  reset\n} = totalItemsSlice.actions;\nexport default totalItemsSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","totalItems","totalItemsSlice","name","reducers","increment","state","reset","actions","reducer"],"sources":["/Users/elad/Desktop/web-shop/frontend/src/features/counter/TotalSlice.tsx"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nexport interface totalItemsState {\n   totalItems: number\n}\n\nconst initialState: totalItemsState = {\n  totalItems: 0,\n}\n\nexport const totalItemsSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.totalItems += 1\n    },\n    reset: (state) => {\n      state.totalItems = 0;\n    }\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { increment, reset } = totalItemsSlice.actions\n\nexport default totalItemsSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAM9C,MAAMC,YAA6B,GAAG;EACpCC,UAAU,EAAE;AACd,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGH,WAAW,CAAC;EACzCI,IAAI,EAAE,SAAS;EACfH,YAAY;EACZI,QAAQ,EAAE;IACRC,SAAS,EAAGC,KAAK,IAAK;MACpBA,KAAK,CAACL,UAAU,IAAI,CAAC;IACvB,CAAC;IACDM,KAAK,EAAGD,KAAK,IAAK;MAChBA,KAAK,CAACL,UAAU,GAAG,CAAC;IACtB;EACF;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEI,SAAS;EAAEE;AAAM,CAAC,GAAGL,eAAe,CAACM,OAAO;AAE3D,eAAeN,eAAe,CAACO,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}